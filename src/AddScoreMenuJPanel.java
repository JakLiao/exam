
import javax.swing.*;   
/**  
 *  
 * @author  drawen  
 */   
public class AddScoreMenuJPanel extends javax.swing.JPanel {   
       
    /** Creates new form AddStudentScoreJPanel */   
    public AddScoreMenuJPanel() {   
        initComponents();   
    }   
       
    /** This method is called from within the constructor to  
     * initialize the form.  
     * WARNING: Do NOT modify this code. The content of this method is  
     * always regenerated by the Form Editor.  
     */   
    // <editor-fold defaultstate="collapsed" desc=" 生成的代码 ">//GEN-BEGIN:initComponents   
    private void initComponents() {   
        jLabel1 = new javax.swing.JLabel();   
        jLabel2 = new javax.swing.JLabel();   
        jLabel3 = new javax.swing.JLabel();   
        jLabel4 = new javax.swing.JLabel();   
        jLabel5 = new javax.swing.JLabel();   
        jLabel6 = new javax.swing.JLabel();   
        grade = new javax.swing.JTextField();   
        major = new javax.swing.JTextField();   
        classNumber = new javax.swing.JTextField();   
        attendNumber = new javax.swing.JTextField();   
        courseId = new javax.swing.JTextField();   
        confirm = new javax.swing.JButton();   
        cancel = new javax.swing.JButton();   
        text = new javax.swing.JLabel();   
        jLabel8 = new javax.swing.JLabel();   
        jLabel9 = new javax.swing.JLabel();   
        studentId = new javax.swing.JTextField();   
        score = new javax.swing.JTextField();   
        input = new javax.swing.JButton();   
        jLabel7 = new javax.swing.JLabel();   
        year = new javax.swing.JTextField();   
        jLabel10 = new javax.swing.JLabel();   
        month = new javax.swing.JTextField();   
        jLabel11 = new javax.swing.JLabel();   
        date = new javax.swing.JTextField();   
        jLabel12 = new javax.swing.JLabel();   
        hour = new javax.swing.JTextField();   
        jLabel13 = new javax.swing.JLabel();   
        minute = new javax.swing.JTextField();   
        jLabel14 = new javax.swing.JLabel();   
   
        jLabel1.setText("\u589e\u52a0\u6210\u7ee9\u5355\u4fe1\u606f");   
   
        jLabel2.setText("\u5e74\u7ea7\uff1a");   
   
        jLabel3.setText("\u4e13\u4e1a\uff1a");   
   
        jLabel4.setText("\u73ed\u53f7\uff1a");   
   
        jLabel5.setText("\u8003\u8bd5\u4eba\u6570\uff1a");   
   
        jLabel6.setText("\u8bfe\u7a0b\u7f16\u53f7\uff1a");   
   
        grade.setText("2005");   
   
        major.setText("\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f");   
   
        classNumber.setText("3");   
   
        attendNumber.setText("10");   
   
        courseId.setText("1001");   
   
        confirm.setText("\u786e\u5b9a");   
        confirm.addActionListener(new java.awt.event.ActionListener() {   
            public void actionPerformed(java.awt.event.ActionEvent evt) {   
                confirmButtonActionListener(evt);   
            }   
        });   
   
        cancel.setText("\u53d6\u6d88");   
        cancel.addActionListener(new java.awt.event.ActionListener() {   
            public void actionPerformed(java.awt.event.ActionEvent evt) {   
                cancelButtonActionListener(evt);   
            }   
        });   
   
        jLabel8.setText("\u5b66\u53f7\uff1a");   
   
        jLabel9.setText("\u5206\u6570\uff1a");   
   
        studentId.setEditable(false);   
   
        score.setEditable(false);   
   
        input.setText("\u8f93\u5165");   
        input.setEnabled(false);   
        input.addActionListener(new java.awt.event.ActionListener() {   
            public void actionPerformed(java.awt.event.ActionEvent evt) {   
                inputButtonActionListener(evt);   
            }   
        });   
   
        jLabel7.setText("\u8003\u8bd5\u65f6\u95f4\uff1a");   
   
        year.setText("2005");   
   
        jLabel10.setText("\u5e74");   
   
        month.setText("12");   
   
        jLabel11.setText("\u6708");   
   
        date.setText("31");   
   
        jLabel12.setText("\u65e5");   
   
        hour.setText("20");   
   
        jLabel13.setText("\u65f6");   
   
        minute.setText("50");   
   
        jLabel14.setText("\u5206");   
   
        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);   
        this.setLayout(layout);   
        layout.setHorizontalGroup(   
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)   
            .add(layout.createSequentialGroup()   
                .addContainerGap()   
                .add(jLabel6)   
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)   
                    .add(layout.createSequentialGroup()   
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)   
                        .add(courseId, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)   
                        .add(181, 181, 181))   
                    .add(layout.createSequentialGroup()   
                        .add(25, 25, 25)   
                        .add(confirm)   
                        .add(52, 52, 52)   
                        .add(cancel)   
                        .add(145, 145, 145))))   
            .add(layout.createSequentialGroup()   
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)   
                    .add(layout.createSequentialGroup()   
                        .add(88, 88, 88)   
                        .add(jLabel1))   
                    .add(layout.createSequentialGroup()   
                        .addContainerGap()   
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)   
                            .add(jLabel2)   
                            .add(jLabel3)   
                            .add(jLabel4)   
                            .add(jLabel5))   
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)   
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)   
                            .add(layout.createSequentialGroup()   
                                .add(attendNumber, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)   
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))   
                            .add(layout.createSequentialGroup()   
                                .add(classNumber, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)   
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))   
                            .add(layout.createSequentialGroup()   
                                .add(major, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)   
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))   
                            .add(grade, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)))   
                    .add(layout.createSequentialGroup()   
                        .addContainerGap()   
                        .add(jLabel7)   
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)   
                        .add(year, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)   
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)   
                        .add(jLabel10)   
                        .add(5, 5, 5)   
                        .add(month, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)   
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)   
                        .add(jLabel11)   
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)   
                        .add(date, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)   
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))   
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)   
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)   
                        .add(layout.createSequentialGroup()   
                            .add(47, 47, 47)   
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)   
                                .add(jLabel8)   
                                .add(jLabel9))   
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)   
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)   
                                .add(score, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)   
                                .add(studentId, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)   
                                .add(input))   
                            .addContainerGap())   
                        .add(layout.createSequentialGroup()   
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)   
                            .add(text, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 167, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)   
                            .addContainerGap()))   
                    .add(layout.createSequentialGroup()   
                        .add(13, 13, 13)   
                        .add(jLabel12)   
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)   
                        .add(hour, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)   
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)   
                        .add(jLabel13)   
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)   
                        .add(minute, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)   
                        .add(3, 3, 3)   
                        .add(jLabel14)   
                        .addContainerGap())))   
        );   
        layout.setVerticalGroup(   
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)   
            .add(layout.createSequentialGroup()   
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)   
                    .add(layout.createSequentialGroup()   
                        .add(21, 21, 21)   
                        .add(jLabel1)   
                        .add(17, 17, 17)   
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)   
                            .add(jLabel2)   
                            .add(grade, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))   
                        .add(14, 14, 14)   
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)   
                            .add(jLabel3)   
                            .add(major, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)   
                            .add(jLabel8)   
                            .add(studentId, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))   
                    .add(layout.createSequentialGroup()   
                        .add(37, 37, 37)   
                        .add(text, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))   
                .add(19, 19, 19)   
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)   
                    .add(jLabel4)   
                    .add(classNumber, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)   
                    .add(jLabel9)   
                    .add(score, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))   
                .add(20, 20, 20)   
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)   
                    .add(attendNumber, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)   
                    .add(jLabel5)   
                    .add(input))   
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)   
                    .add(layout.createSequentialGroup()   
                        .add(13, 13, 13)   
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)   
                            .add(jLabel6)   
                            .add(courseId, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))   
                    .add(layout.createSequentialGroup()   
                        .add(56, 56, 56)   
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)   
                            .add(jLabel14)   
                            .add(minute, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)   
                            .add(jLabel13)   
                            .add(hour, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)   
                            .add(jLabel12)   
                            .add(date, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)   
                            .add(jLabel11)   
                            .add(month, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)   
                            .add(jLabel10)   
                            .add(jLabel7)   
                            .add(year, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))   
                .add(19, 19, 19)   
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)   
                    .add(confirm)   
                    .add(cancel))   
                .addContainerGap())   
        );   
    }// </editor-fold>//GEN-END:initComponents   
   
    private void inputButtonActionListener(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputButtonActionListener   
        long id;   
        float score;   
        try{   
            id=Long.parseLong(this.studentId.getText());   
            score=Float.parseFloat(this.score.getText());   
            if((score<0)||(score>ScoreMenu.MAX_SCORE)){   
                JOptionPane.showMessageDialog(null,"分数超出范围","出错",JOptionPane.ERROR_MESSAGE);   
                return;   
            }   
            int num=scoreMenu.getNumberOfAttendTestStudent();   
            if(!scoreMenu.setScoreOfTest(score,id)){   
                JOptionPane.showMessageDialog(null,"输入的学生不属于此班级","出错",JOptionPane.ERROR_MESSAGE);   
                return;   
            }   
            if(scoreMenu.getNumberOfAttendTestStudent()==num){   
                JOptionPane.showMessageDialog(null,"已经修改了学号为"+id+"的学生的成绩","修改",JOptionPane.WARNING_MESSAGE);   
                return;   
            }   
            JOptionPane.showMessageDialog(null,"已经记录了第"+(num+1)+"个学生的成绩","登记",JOptionPane.WARNING_MESSAGE);   
            if(attendTestNumber<=scoreMenu.getNumberOfAttendTestStudent()){   
                JOptionPane.showMessageDialog(null,"已经成功完成了此次成绩的登记工作","登记成绩单成功",JOptionPane.WARNING_MESSAGE);   
                reset();   
                this.scoreMenu.saveToFile();   
                return;   
            }   
            this.text.setText("输入第"+(num+2)+"个学生的信息");   
        }catch(Exception e){   
            JOptionPane.showMessageDialog(null,"输入的数据格式有误","出错",JOptionPane.ERROR_MESSAGE);   
        }   
    }//GEN-LAST:event_inputButtonActionListener   
    private void reset(){   
        this.grade.setEditable(true);   
        this.major.setEditable(true);   
        this.classNumber.setEditable(true);   
        this.attendNumber.setEditable(true);   
        this.courseId.setEditable(true);   
        this.confirm.setEnabled(true);   
        this.year.setEditable(true);   
        this.month.setEditable(true);   
        this.date.setEditable(true);   
        this.hour.setEditable(true);   
        this.minute.setEditable(true);   
        this.text.setText("");   
        this.studentId.setEditable(false);   
        this.studentId.setText("");   
        this.score.setEditable(false);   
        this.score.setText("");   
        this.input.setEnabled(false);   
    }   
    private void cancelButtonActionListener(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionListener   
        int select=JOptionPane.showConfirmDialog(null,"确认取消本次输入的成绩单","确认",JOptionPane.OK_CANCEL_OPTION);   
        if(select==0)   
            reset();   
    }//GEN-LAST:event_cancelButtonActionListener   
   
    private void confirmButtonActionListener(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionListener   
        String major,courseId;   
        int grade,classNumber;   
        int []testTime=new int[5];   
        try{   
            grade=Integer.parseInt(this.grade.getText());   
            major=this.major.getText();   
            courseId=this.courseId.getText();   
            classNumber=Integer.parseInt(this.classNumber.getText());   
            attendTestNumber=Integer.parseInt(this.attendNumber.getText());   
            testTime[0]=Integer.parseInt(this.year.getText());   
            testTime[1]=Integer.parseInt(this.month.getText());   
            testTime[2]=Integer.parseInt(this.date.getText());   
            testTime[3]=Integer.parseInt(this.hour.getText());   
            testTime[4]=Integer.parseInt(this.minute.getText());   
            if((testTime[1]>12)||(testTime[1]<=0)||(testTime[2]>31)||(testTime[2]<=0)||   
                    (testTime[3]>24)||(testTime[3]<0)||(testTime[4]>60)||(testTime[4]<0)){   
                JOptionPane.showMessageDialog(null,"考试日期格式有误","出错",JOptionPane.ERROR_MESSAGE);   
                return;   
            }   
            if(attendTestNumber<=0){   
                JOptionPane.showMessageDialog(null,"参加考试人数不能少于1","出错",JOptionPane.ERROR_MESSAGE);   
                return;   
            }   
            if((tempCourse=Course.queryFromFile(courseId))==null){   
                JOptionPane.showMessageDialog(null,"课程文件中没有此编号的课程信息记录","出错",JOptionPane.ERROR_MESSAGE);   
                return;   
            }   
            if((tempClass=Class.queryFromFile(grade,major,classNumber))==null){   
                JOptionPane.showMessageDialog(null,"班级文件中没有此班级信息的记录","出错",JOptionPane.ERROR_MESSAGE);   
                return;   
            }   
            else if(tempClass.getStudentNumber()<this.attendTestNumber){   
                JOptionPane.showMessageDialog(null,"参加考试人数多于班级人数","出错",JOptionPane.ERROR_MESSAGE);   
                return;   
            }   
            if((scoreMenu=ScoreMenu.queryFromFile(tempClass,tempCourse))!=null){   
                JOptionPane.showMessageDialog(null,"系统中已经存在该班级该门课程的成绩单","出错",JOptionPane.ERROR_MESSAGE);   
                return;   
            }   
            scoreMenu=new ScoreMenu(tempClass,tempCourse,testTime,0,null,null);   
            this.grade.setEditable(false);   
            this.major.setEditable(false);   
            this.classNumber.setEditable(false);   
            this.courseId.setEditable(false);   
            this.attendNumber.setEditable(false);   
            this.confirm.setEnabled(false);   
            this.text.setText("输入第1个学生信息：");   
            this.studentId.setEditable(true);   
            this.score.setEditable(true);   
            this.input.setEnabled(true);   
            this.year.setEditable(false);   
            this.month.setEditable(false);   
            this.date.setEditable(false);   
            this.hour.setEditable(false);   
            this.minute.setEditable(false);   
        }catch(Exception e){   
            JOptionPane.showMessageDialog(null,"输入数据格式有误","出错",JOptionPane.ERROR_MESSAGE);               
        }   
    }//GEN-LAST:event_confirmButtonActionListener   
    private ScoreMenu scoreMenu;   
    private Class tempClass;   
    private Course tempCourse;   
    private int attendTestNumber;   
    // 变量声明 - 不进行修改//GEN-BEGIN:variables   
    private javax.swing.JTextField attendNumber;   
    private javax.swing.JButton cancel;   
    private javax.swing.JTextField classNumber;   
    private javax.swing.JButton confirm;   
    private javax.swing.JTextField courseId;   
    private javax.swing.JTextField date;   
    private javax.swing.JTextField grade;   
    private javax.swing.JTextField hour;   
    private javax.swing.JButton input;   
    private javax.swing.JLabel jLabel1;   
    private javax.swing.JLabel jLabel10;   
    private javax.swing.JLabel jLabel11;   
    private javax.swing.JLabel jLabel12;   
    private javax.swing.JLabel jLabel13;   
    private javax.swing.JLabel jLabel14;   
    private javax.swing.JLabel jLabel2;   
    private javax.swing.JLabel jLabel3;   
    private javax.swing.JLabel jLabel4;   
    private javax.swing.JLabel jLabel5;   
    private javax.swing.JLabel jLabel6;   
    private javax.swing.JLabel jLabel7;   
    private javax.swing.JLabel jLabel8;   
    private javax.swing.JLabel jLabel9;   
    private javax.swing.JTextField major;   
    private javax.swing.JTextField minute;   
    private javax.swing.JTextField month;   
    private javax.swing.JTextField score;   
    private javax.swing.JTextField studentId;   
    private javax.swing.JLabel text;   
    private javax.swing.JTextField year;   
    // 变量声明结束//GEN-END:variables   
       
}   
